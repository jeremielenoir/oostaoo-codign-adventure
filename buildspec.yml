version: 0.2
env:
  variables:
    JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
    NODE_OPTIONS: "--max_old_space_size=8192"
phases:
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin 164476836539.dkr.ecr.eu-west-3.amazonaws.com
    finally:
      - echo This always runs even if the login command fails 
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - export NODE_OPTIONS=--max_old_space_size=8192
      - echo $NODE_OPTIONS
      - cd ./client 
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t roodeo:roodeo-front .
      - docker tag roodeo:roodeo-front 164476836539.dkr.ecr.eu-west-3.amazonaws.com/roodeo:roodeo-front
      - cd ../server 
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t roodeo:roodeo-api .
      - docker tag roodeo:roodeo-api 164476836539.dkr.ecr.eu-west-3.amazonaws.com/roodeo:roodeo-api
    finally:
      - echo This always runs even if the install command fails
  post_build:
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 164476836539.dkr.ecr.eu-west-3.amazonaws.com/roodeo:roodeo-front
      - docker push 164476836539.dkr.ecr.eu-west-3.amazonaws.com/roodeo:roodeo-api
artifacts:
  files:
    - 'docker-compose.yml'
    - 'default.conf'
    - 'scripts/**/*'
    - 'appspec.yml'
  name: roodeo


